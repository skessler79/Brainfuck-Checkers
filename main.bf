+++++ +++++             initialize counter (cell #0) to 10
[                       use loop to set 70/100/30/10
    > +++++ ++              add  7 to cell #1
    > +++++ +++++           add 10 to cell #2
    > +++                   add  3 to cell #3
    > +                     add  1 to cell #4
<<<< -                  decrement counter (cell #0)
]

START Print "Starting a new game"
++[>+++++<-]>+++.
<+++[>>+++++<<-]>>+.
<<+++[>>-----<<-]>>----.
<<+++[>>+++++<<-]>>++.
++.
----- ----- -.
+++++.
----- --.

>++.

<----- -.

>.

<+++++ +++++ +++.
----- ----.
<<+++[>>+++++<<-]>>+++.

>.

<<<+++[>>-----<<-]>>-.
----- -.
+++++ +++++ ++.
----- ---.

>>..

// Return pointer to zero
<<<

END Print "Starting a new game"


START Initializing board array
	// Board positions set in memory cell 24 to 123
	// Iterates first two row twice
	>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>++
	[
		<<<<<<<<<<<<<<<<<<<<

		<+++++
		// First Row
		[
			// Set to space
			<+++++ +
			[
				<<+++++
				>>-
			]
			<<++

			// Set to 'b'
			>>+++++ +++++
			[
				<+++++ +++++
				>-
			]
			<--

			// Transfer counter to next 2 tiles
			>>-
			[
				>>+
				<<-
			]
			>>
		]

		// Second Row
		+++++
		[
			// Set to 'b'
			<+++++ +++++
			[
				<<+++++ +++++
				>>-
			]
			<<--

			// Set to space
			>>+++++ +
			[
				<+++++
				>-
			]
			<++

			// Transfer counter to next 2 tiles
			>>-
			[
				>>+
				<<-
			]
			>>
		]

		// Decrement main iterator
		>-
		[
			>>>>>>>>>>>>>>>>>>>>+
			<<<<<<<<<<<<<<<<<<<<-
		]
		>>>>>>>>>>>>>>>>>>>>
	]

	// Set middle no man's land
	<<<<<<<<<<<<<<<<<<<<<<
	++++++++++ ++++++++++
	[
		// Set to space
		<+++++ +++
		[
			<++++
			>-
		]

		// Transfer counter to next tile
		>-
		[
			>+
			<-
		]
		>

	]

	// Iterates last two row twice
	>>>>>>>>>>>>>>>>>>>>>>++
	[
		<<<<<<<<<<<<<<<<<<<<

		<+++++
		// First Row
		[
			// Set to space
			<+++++ +
			[
				<<+++++
				>>-
			]
			<<++

			// Set to 'a'
			>>+++++ +++++
			[
				<+++++ +++++
				>-
			]
			<---

			// Transfer counter to next 2 tiles
			>>-
			[
				>>+
				<<-
			]
			>>
		]

		// Second Row
		+++++
		[
			// Set to 'a'
			<+++++ +++++
			[
				<<+++++ +++++
				>>-
			]
			<<---

			// Set to space
			>>+++++ +
			[
				<+++++
				>-
			]
			<++

			// Transfer counter to next 2 tiles
			>>-
			[
				>>+
				<<-
			]
			>>
		]

		// Decrement main iterator
		>-
		[
			>>>>>>>>>>>>>>>>>>>>+
			<<<<<<<<<<<<<<<<<<<<-
		]
		>>>>>>>>>>>>>>>>>>>>
	]

	// Return pointer to first cell
	<<<<<<<<<< <<<<<<<<<< <<<<<<<<<< <<<<<<<<<< <<<<<<<<<<
	<<<<<<<<<< <<<<<<<<<< <<<<<<<<<< <<<<<<<<<< <<<<<<<<<<
	<<<<<<<<<< <<<<<<<<<< <<<<<<<<<< <<<<<<<<<< <<<<<<<<<<
	<<<<<<<<<< <<<<<<<<<< <<

END Initializing board array




START Setup Board Constants and Variables
	// Set row number
	>>>>> >>>>+++++ ++
	[
		<+++++ ++
		>-
	]<->

	// set ASCII value of dash
	<<<+++++ ++++
	[
		>+++++
		<-
	]


	// Set row iterator to 9
	>>>+++++ +++++

	// Setup if else statement
	>+

	// Set vertical line ASCII
	<<<<< <<<<<++++
		[
			>>+++++
			<<-
		]
		>>+++

	// Return pointer to zero
	<<

END Setup Board Constants and Variables
+
///// Start Loop Here /////[
-
START Print Board
	>>>>> >>>>
	[
		-
		START Print Horizontal Line (Start at pointer 009)

			// Print 3 spaces
			<<<<< <...

			// Set to iterate dash 41 times
			>>+++++ +++
			[
				>+++++
				<-
			]
			>+

			[>.<-]
			<<.

			// Return pointer to zero
			<<<<

		END Print Horizontal Line

		START Print Board Tiles

			>>>
			// Print row number
			.>>>>>.+<<<<<.>>>>> >>>>

			// Print value of array
			>>>>> >>
			>>>>>>>>>> >>>>>>>>>> >>>>
			+++++ +++++
			[
				

				// Print vertical line
				<<<<< <<<<< <<<<< <<
				<<<<<<<<<< <<<<<<<<<< <<<<
				.
				>.

				// Increment element counter by 1
				>>>>> >>>>> >>>>> >>
				>>>>>>>>>> >>>>>>>>>> >>>>
				+

				[->+>+<<]>>[-<<+>>]<<
				>[->>+<<]>
				>[[<+>-]<>>[-<+>]<<[->>+<<]>[-<+>]>-]<
				<[[>+<-]<]
				>>[>]<.
				[[>+<-]<]
				<<<<< <<<<< <<<<< <<<<
				<<<<<<<<<< <<<<<<<<<< <<<<
				.
				>>>>> >>>>> >>>>> >
				>>>>>>>>>> >>>>>>>>>> >>>>
				-
			]
			<<<<< <<<<< <<<<< <<
			<<<<<<<<<< <<<<<<<<<< <<<<
			.>>.

			// Return pointer to zero
			<<<<

		END Print Board Tiles
	>>>>> >>>>
	]
	>>>>>>>>>> >>>>>>>>>> >>>>>>>>>> >>>>>[-]
	<<<<<<<<<< <<<<<<<<<< <<<<<<<<<< <<<<<

	// Set to iterate dash 41 times
	<<<<< <...
	>>+++++ +++
	[
		>+++++
		<-
	]
	>+

	[>.<-]


	// TODO Add column (a to j)

	<<..

	// Return pointer to zero
	<<<<

END Print Board

START User Input

	START Request User Input
		>---.
		<+++[>>-----<<-]>>-.
		----- --.
		----.
		<<+++[>>+++++<<-]>>+++.
		<<+++[>>-----<<-]>>+.

		>.

		<++++.
		+++++.
		++.
		+++++.
		-.

		>.

		<----- --.
		++.
		+++++ ++.
		<<+++[>>-----<<-]>>--.
		>>.

		// Store inputs
		>>>>>>>>>>>>,>,>,>,>,

		// Return pointer to zero
		<<<<< <<<<< <<<<< <<<<<

	END Request User Input

	START Process Inputs

		// Set variable to 97 to process columns
		>>>>>>>>>> >>>+++++ +++++
		[
			>+++++ +++++
			>+++++ +++++
			<<-
		]>--->---

		// Process target column
		[
			>-
			<-
		]<
		// Process destination column
		[
			>>>>>-
			<<<<<-
		]

		// Set variable to 48 to process rows
		<+++++ +++
		[
			>+++++ +
			>+++++ +
			<<-
		]>>
		// Process target column
		[
			>>-
			<<-
		]<
		// Process destination column
		[
			>>>>>>-
			<<<<<<-
		]

		// Compute target piece on board
		>+++++ +++++
		>[<<<+>>>-]
		<[>+<-]
		>[<+>-]
		<[>>[<+<<+>>>-]<<<[>>>+<<<-]>-]
		>>[-]
		<[<<<+>>>-]

		// Compute destination tile on board
		>>[-]+++++ +++++
		>[<<<+>>>-]
		<[>+<-]
		>[<+>-]
		<[>>[<+<<+>>>-]<<<[>>>+<<<-]>-]
		>>[-]
		<[<<<+>>>-]

		<<<[<<+>>-]

		// Make copies of the inputs
		<<<[>>>>>>>>>>>+>+>+<<<<<<<<<<<<<-]
		>>>>>>>>>>>>>[<<<<<<<<<<<<<+>>>>>>>>>>>>>-]
		<<<<<<<<<<<<[>>>>>>>>>>>>+>+>+<<<<<<<<<<<<<<-]
		>>>>>>>>>>>>>>[<<<<<<<<<<<<<<+>>>>>>>>>>>>>>-]

		// Return pointer to zero
		<<<<< <<<<< <<<<< <<<<< <<<<< <<<

	END Process Inputs

	START Calculate Distance

		>>>>> >>>>> >>+

		>>
		[
		  <->-
		  [
		    <
		    [
		      >>>
		    ]
		    <
		    [
		      >>[>+<-]
		    ]
		    >>
		  ]
		  <<
		  [
		    >[>>+<<-]>
		  ]
		  <
		]

		// Return pointer to zero
		<<<<< <<<<< <<<

	END Calculate Distance

	START Check Valid Distance

		// Setup 9 or 11
		>>>>> >>>>> >>[-]>>> >+++++ ++++
		>+++++ +++++ +

		// Check for 9
		<[<<+>>-]+
		<[<-<+>>-]
		<<[>>+<<-]
		>[>>-<<[-]]

		// Check for 11
		>>>[<<<+>>>-]+
		<<[<-<+>>-]
		<<[>>+<<-]
		>[>>>-<<<[-]]

		// OR operation
		>[-]>[>+<-]
		>[[-]<<+>>]

		<<
		[
			>>>>>>>>>> >>>>>>>>>> >>>>>>>>>> >>>>>>>>>> >>>>>>>>>>
			>>>>>>>>>> >>>>>>>>>> >>>>>>>>>> >>>>>>>>>> >>>>>>>>>>
			>>>>>>>>>> >>>>>>>>>> >>>>>>>>>> >>>>>>>>>> >>>>>+
			<<<<<<<<<< <<<<<<<<<< <<<<<<<<<< <<<<<<<<<< <<<<<<<<<<
			<<<<<<<<<< <<<<<<<<<< <<<<<<<<<< <<<<<<<<<< <<<<<<<<<<
			<<<<<<<<<< <<<<<<<<<< <<<<<<<<<< <<<<<<<<<< <<<<<-
		]

		// Return pointer to zero
		<<<<< <<<<< <<<<<

	END Check Valid Distance

	START Check Target Piece

		>>>>>>>>>> >>>>>>>>>> >>>>
		[
		>>>>>>>>>> >>>>>>>>>> >>>>>>>>>> >>>>>>>>>> 
		>>>>>>>>>> >>>>>>>>>> >>>>>>>>>> >>>>>>>>>> 
		>>>>>>>>>> >>>>>>>>>> >>>>>>>>>> >>>>>>>>>> 
		>>>>>+
		<<<<<<<<<< <<<<<<<<<< <<<<<<<<<< <<<<<<<<<< 
		<<<<<<<<<< <<<<<<<<<< <<<<<<<<<< <<<<<<<<<< 
		<<<<<<<<<< <<<<<<<<<< <<<<<<<<<< <<<<<<<<<< 
		<<<<<-
		]

		>>>>>>>>>> >>>>>>>>>> >>>>>>>>>> >>>>>>>>>> 
		>>>>>>>>>> >>>>>>>>>> >>>>>>>>>> >>>>>>>>>> 
		>>>>>>>>>> >>>>>>>>>> >>>>>>>>>> >>>>>>>>>> 
		>>>>>

		// Algorithm to get array item (codingame)
		[<<[<]>[-<+>]>[>]>-]<<[<]>[-<+>]<[->>[>]>+>+
		<<<[<]<]>>[>]>>[-<<<[<]<+>>[>]>>]<<<[<]<[[->+<]<]>>[>]>

		>>+++++ +++++
		[
			>+++++ +++++
			<-
		]>---

		// Check player
		>>[-]+<
		// if player b
		[
			-<+>>>
		]
		// if player a
		>
		[
			<+>>>
		]
		<<<<<<<

		// Check if the target piece is correct
		[->>>-<<<]+>>>[<<<->>>[-]]<<<

		[>>>>>>>>+<<<<<<<<-]

		// Return pointer to zero
		<<<<<<<<<< <<<<<<<<<< <<<<<<<<<< <<<<<<<<<< <<<<<<<<<< 
		<<<<<<<<<< <<<<<<<<<< <<<<<<<<<< <<<<<<<<<< <<<<<<<<<< 
		<<<<<<<<<< <<<<<<<<<< <<<<<<<<<< <<<<<<<<<< <<<<<<<<<

	END Check Target Piece

	START Check Destination Tile

		>>>>>>>>>> >>>>>>>>>> >>>>>>
		[
			>>>>>>>>>> >>>>>>>>>> >>>>>>>>>> >>>>>>>>>> 
			>>>>>>>>>> >>>>>>>>>> >>>>>>>>>> >>>>>>>>>> 
			>>>>>>>>>> >>>>>>>>>> >>>>>>>>>> >>>>>>>>>> >>>+
			<<<<<<<<<< <<<<<<<<<< <<<<<<<<<< <<<<<<<<<< 
			<<<<<<<<<< <<<<<<<<<< <<<<<<<<<< <<<<<<<<<< 
			<<<<<<<<<< <<<<<<<<<< <<<<<<<<<< <<<<<<<<<< <<<-
		]
		>>>>>>>>>> >>>>>>>>>> >>>>>>>>>> >>>>>>>>>> 
		>>>>>>>>>> >>>>>>>>>> >>>>>>>>>> >>>>>>>>>> 
		>>>>>>>>>> >>>>>>>>>> >>>>>>>>>> >>>>>>>>>> >>>

		// Algorithm to get array item (codingame)
		[<<[<]>[-<+>]>[>]>-]<<[<]>[-<+>]<[->>[>]>+>+
		<<<[<]<]>>[>]>>[-<<<[<]<+>>[>]>>]<<<[<]<[[->+<]<]>>[>]>

		>>+++
		[
			>+++++ +++++
			<-
		]>++

		// Check if the destination tile is empty
		<<<[->>>-<<<]+>>>[<<<->>>[-]]<<<

		[>>>>> >>>>+<<<<< <<<<-]

	END Check Destination Tile

	START Check For All Conditions (Start at pointer 149)

		// Check if all conditions are satisfied
		>>>>> >>>>>+
		[-<->]+<[>-<[-]]
		>[-<<->>]+<<[>>-<<[-]]>>
		[->-<]+>[<->[-]]<

		// Swap pieces if conditions are satisfied
		[
			-

			<<<<<<<<<< <<<<<<<<<< <<<<<<<<<< <<<<<<<<<< <<<<<<<<<<
			<<<<<<<<<< <<<<<<<<<< <<<<<<<<<< <<<<<<<<<< <<<<<<<<<<
			<<<<<<<<<< <<<<<<<<<< <<<<<<<<<< <<<<+
			[<+>>>>>>>>>> >>>>>>>>>>+<<<<<<<<<< <<<<<<<<<-]
			>>>>>>>>>> >>>>>>>>>

			// Accessing value of target piece
			[->+>+<<]>>[-<<+>>]<<
			>[->>+<<]>
			>[[<+>-]<>>[-<+>]<<[->>+<<]>[-<+>]>-]<
			<[[>+<-]<]
			>>[>]<[-]
			>+++
			[
				<+++++ +++++
				>-
			]<++
			[[>+<-]<]
			<<[-]

			<<<<< <<<<< <<<<< <<[>>>>> >>>>> >>>>> >>+<<<<< <<<<< <<<<< <<-]
			>>>>> >>>>> >>>>> >>+

			// Accessing value of destination tile
			[->+>+<<]>>[-<<+>>]<<
			>[->>+<<]>
			>[[<+>-]<>>[-<+>]<<[->>+<<]>[-<+>]>-]<
			<[[>+<-]<]
			>>[>]<[-]

			<[<]


			<<<<<+<
			[
				-
				>>>>>>
				>>[>]
				>+++++ +++++
				[
					<+++++ +++++
					>-
				]<--
				[[>+<-]<]
				
			]
			>
			[
				<+
				>>>>>>
				>>[>]
				>+++++ +++++
				[
					<+++++ +++++
					>-
				]<---
				[[>+<-]<]
			]
		]

		// Return pointer to zero
		<<<<<<<<<< <<<<<<<<<<
		<<<<<<<<<< <<<<<<<<<< <<<<<<[<]

	END Check For All Conditions

END User Input

// Reset cells to start of print board
>+++
>++++++++++ ++++++++++ +++
>>>>>>----- -----
>+++++ +++++
>>>>>>>>>> >>>>>[-]>>>>> >>>>>>>>>> >>>>>[-]
<<<<<<<<<< <<<<<<<<<< <<<<<<<<<< <<<<<
<<<<<<<<<
+
]
